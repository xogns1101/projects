<!-- 이 파일이 mybatis의 mapper로 사용된다는 일종의 선언  -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 에는 파일과 연동될 인터페이스의 전체 경로
    (패키지명 포함 클래스명)를 적는다-->
<mapper namespace="com.spring.mvc.chap05.mapper.BoardMapper">
    <!-- 구현고자 하는 인터페이스에 명세된 추상 메서드별로 SQL 을 작성 -->
    <!-- id에는 추상메서드 이름을 적용 -->
    <!-- SQL 작성할 때 값을 전달하는 방법은
         1. 추상메서드를 보고 어떤 타입의 값이 전달되는지 확인
         2. 값이 만약 객체라면 객체 내부의 팔드값을 꺼내기 위해 필드명을 지목(get 안붙힘)
         3.. 단일 값(기본 타입)이라면 매개변수명으로 지목-->
    <insert id="save">

        INSERT INTO
            tbl_board
            (title
            , content
            , writer)
        VALUES
            (
            #{title}
            , #{content}
            , #{writer}
            )

    </insert>

    <delete id="delete">

        DELETE FROM
            tbl_board
        WHERE board_no = #{boardNo}

    </delete>

    <update id="updateViewCount">

        UPDATE tbl_board
            SET view_count = view_count + 1
        WHERE board_no = #{bno}

    </update>

    <!-- SELECT 의 경우에는 반환되는 타입을 작성해 주어야 함
        resultType 을 통해 리턴되는 객체의 타입을 애기해 주어여 함
        데이터 베이스의 컬럼명과 엔터티의 필드명이 동일해야함(스네이크케이스 -> 카멜케이스 변환은 따로 설정을 통해 처리
        ex) board_bo : boardNo (o)   board_num : bnum(x) )

        resultType 에 List를 따로 언급 할 필요 x
        -->
    <select id="findAll" resultType="board">

        SELECT
            *
        FROM
            tbl_board
        ORDER BY
            board_no
        DESC
        LIMIT #{pageStart}, #{amount}

    </select>

    <select id="findOne" resultType="board">

        SELECT
            *
        FROM
            tbl_board
        WHERE
            board_no = #{boardNo}

    </select>

    <select id="getCount" resultType="int">

        SELECT
            COUNT(1)
        FROM
            tbl_board

    </select>



</mapper>